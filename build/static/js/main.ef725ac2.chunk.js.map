{"version":3,"sources":["components/Home.js","Stateprovider.js","components/NavBar.js","components/Permissions.js","components/ActivityDetails.js","components/Activity.js","components/MyActivities.js","components/MySufferScores.js","components/App.js","reportWebVitals.js","reducer.js","index.js"],"names":["Home","useState","scope","className","onClick","window","open","type","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","NavBar","active","history","accesToken","useHistory","push","Permissions","Notredirect","expires_at","refresh_token","dispatch","setScopesArr","setLoading","useEffect","code1","location","search","split","code","scopes","console","log","params","client_id","client_secret","grant_type","fetch","method","headers","body","JSON","stringify","then","res","json","access_token","Date","now","ActivityDetails","id","useParams","authAthleteData","setAuthAthleteData","data","setData","authorization","accept","data2","response","catch","error","newCoordinates","mymap","L","map","setView","tileLayer","attribution","maxZoom","tileSize","zoomOffset","accessToken","addTo","coordinates","polyUtil","decode","summary_polyline","i","length","lat","lng","polyline","color","weight","opacity","lineJoin","src","profile_medium","firstname","name","kudos_count","Math","round","distance","average_speed","average_heartrate","moving_time","average_watts","weighted_average_watts","suffer_score","Activity","counter","athlete","e","stopPropagation","MyActivities","activities","setActivities","doc","index","key","MySufferScores","intenPoints","setIntenPoints","setLength","showChart","setShowChart","currentEndWeek","day","getDay","setDate","getDate","getTime","currentWeekScore","currentWeekIndex","date","start_date_local","oldData","newData","newArr","width","height","chartType","loader","options","title","hAxis","titleTextStyle","vAxis","minValue","maxValue","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","state","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef725ac2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"../css/Home.css\";\r\n\r\nfunction Home() {\r\n  const [scope, setScope] = useState(\"profile:read_all,activity:read\");\r\n\r\n  function firee() {\r\n    const data2 = { data: scope };\r\n\r\n    window.open(`https://www.strava.com/oauth/authorize?client_id=74263&redirect_uri=https://apistrava-1c4c0.web.app/exchange_token&response_type=code&approval_prompt=force&scope=${scope}`, \"_self\");\r\n  }\r\n  return (\r\n    <div className=\"home\">\r\n      <h1 className=\"home_title\">GRETRAINING</h1>\r\n\r\n      <button className=\"home_login\" onClick={() => firee()} type=\"submit\">\r\n        log in\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React,{createContext,useContext,useReducer} from \"react\";\r\n\r\nexport const StateContext=createContext();\r\n\r\nexport const StateProvider=({reducer,initialState,children})=>(\r\n    <StateContext.Provider value={useReducer(reducer,initialState)}>\r\n    {children}\r\n    </StateContext.Provider>\r\n)\r\nexport const useStateValue=()=>useContext(StateContext)","import React,{useEffect,useState} from 'react';\r\nimport \"../css/NavBar.css\";\r\n\r\n\r\nimport {useStateValue} from \"../Stateprovider\";\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nfunction NavBar({ active}) {\r\n     const[{accesToken},dispatch]=useStateValue();\r\n   \r\n   \r\n    const history=useHistory()\r\n\r\n   \r\n\r\n   \r\n\r\n  \r\n\r\n   //console.log(intenPoints)\r\n   \r\n   \r\n\r\n    return (\r\n        <div className=\"navbar_com\">\r\n        <div className=\"navbar\">\r\n            \r\n            <div onClick={()=>history.push(\"/\")} className={`navbar_element ${active===\"home\"&&'navbar_element_active' }`}>Home</div>\r\n            <div onClick={()=>history.push(\"/myactivities\")} className={`navbar_element ${active===\"act\"&&'navbar_element_active' }`}>my activities</div>\r\n\r\n           \r\n            <div onClick={()=>history.push(\"/mysufferscores\")} className={`navbar_element ${active===\"suf\"&&'navbar_element_active' }`}>weekly intensity chart</div>\r\n\r\n            \r\n\r\n            \r\n        </div>\r\n        \r\n\r\n\r\n        \r\n        {/* {intenPoints.map((doc)=>(\r\n            <div>{console.log(doc)}</div>\r\n        ))} */}\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../css/Permissions.css\";\r\nimport NavBar from \"./NavBar\";\r\nimport { useStateValue } from \"../Stateprovider\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Permissions({ Notredirect }) {\r\n  const [{ accesToken, expires_at, refresh_token }, dispatch] = useStateValue();\r\n  const [scopesArr, setScopesArr] = useState([]);\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (accesToken === null && Notredirect) {\r\n      let path = window.location.search;\r\n\r\n      let code1 = path.split(\"&\");\r\n      let code2 = code1[1].split(\"=\");\r\n      let code = code2[1];\r\n      let scopes = code1[2];\r\n\r\n      setScopesArr(scopes.split(\"=\")[1].split(\",\"));\r\n\r\n      console.log(\"code:\", code);\r\n\r\n      const data2 = { data: code };\r\n      //\r\n      let params = {\r\n        client_id: \"74263\",\r\n        client_secret: \"de95dd8ef27c44d1c6f385779f381ec75e92fb8b\",\r\n        code: code,\r\n        grant_type: \"authorization_code\",\r\n      };\r\n\r\n      fetch(\"https://www.strava.com/oauth/token\", {\r\n        method: \"POST\", // or 'PUT'\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(params),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          //   console.log(json);\r\n\r\n          if (json.access_token) {\r\n            dispatch({\r\n              type: \"SET_ACCESTOKEN\",\r\n              accesToken: json.access_token,\r\n              expires_at: json.expires_at,\r\n              refresh_token: json.refresh_token,\r\n            });\r\n            setLoading(false);\r\n          }\r\n        });\r\n      //\r\n    } else if (Date.now() / 1000 >= expires_at && expires_at != null) {\r\n      console.log(Date.now() / 1000, expires_at);\r\n      const data3 = { data: refresh_token };\r\n      //\r\n      let params = {\r\n        client_id: \"74263\",\r\n        client_secret: \"de95dd8ef27c44d1c6f385779f381ec75e92fb8b\",\r\n        code: refresh_token,\r\n        grant_type: \"refresh_token\",\r\n      };\r\n\r\n      fetch(\"https://www.strava.com/oauth/token\", {\r\n        method: \"POST\", // or 'PUT'\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(params),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          //   console.log(json);\r\n\r\n          if (json.access_token) {\r\n            dispatch({\r\n              type: \"SET_ACCESTOKEN\",\r\n              accesToken: json.access_token,\r\n              expires_at: json.expires_at,\r\n              refresh_token: json.refresh_token,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* <div onClick={()=>listActivities()}>Get my activities</div> */}\r\n\r\n      {/* {activities&&<div className=\"activities\">\r\n              {activities.map((doc,index)=>(\r\n                <Activity data={doc} key={index}/>\r\n              ))}\r\n            </div>} */}\r\n      {/* {loading ? <div>loading..</div> : <div>permissions loaded</div>} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Permissions;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useStateValue } from \"../Stateprovider\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport \"../css/Activity.css\";\r\nimport L, { LatLngExpression } from \"leaflet\";\r\nimport polyUtil from \"polyline-encoded\";\r\n\r\nfunction ActivityDetails() {\r\n  const [{ accesToken }, dispatch] = useStateValue();\r\n  const { id } = useParams();\r\n  const [authAthleteData, setAuthAthleteData] = useState();\r\n  const [data, setData] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const data = { token: accesToken, id: id };\r\n    console.log(id);\r\n    fetch(`https://www.strava.com/api/v3/activities/${id}?include_all_efforts=true`, {\r\n      method: \"GET\", // or 'PUT'\r\n      headers: {\r\n        authorization: \"Bearer \" + accesToken,\r\n        accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        // console.log(json);\r\n        setData(json);\r\n      });\r\n\r\n    const data2 = { data: accesToken };\r\n    fetch(\"/getauthathlete\", {\r\n      method: \"POST\", // or 'PUT'\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data2),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        //console.log(\"Success, Data:\", data);\r\n        //console.log(data.data[0])\r\n\r\n        setAuthAthleteData(data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (data && (data.type === \"Ride\" || data.type === \"Run\" || data.type === \"Walk\")) {\r\n      let newCoordinates = [[51.47832, 3.526]];\r\n      var mymap = L.map(\"mape\").setView(newCoordinates[0], 13);\r\n      L.tileLayer(\"https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}\", {\r\n        attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n        maxZoom: 18,\r\n        id: \"mapbox/streets-v11\",\r\n        tileSize: 512,\r\n        zoomOffset: -1,\r\n        accessToken: \"pk.eyJ1IjoicGlldGcxMjM0IiwiYSI6ImNrd2RocDFidzQ0eHUzMHJveGNmY2UyYnAifQ.r2rclJ70-a9SMFZRZQ8H8w\",\r\n      }).addTo(mymap);\r\n\r\n      //console.log(data.summary_polyline)\r\n      var coordinates = polyUtil.decode(data.map.summary_polyline);\r\n\r\n      for (let i = 0; i < coordinates.length; i++) {\r\n        newCoordinates[i] = { lat: coordinates[i][0], lng: coordinates[i][1] };\r\n      }\r\n      //console.log(newCoordinates)\r\n\r\n      L.polyline(newCoordinates, {\r\n        color: \"red\",\r\n        weight: 5,\r\n        opacity: 0.7,\r\n        lineJoin: \"round\",\r\n      }).addTo(mymap);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"act\">\r\n      <div className=\"act_header\">\r\n        <img className=\"act_header_img\" src={authAthleteData?.profile_medium}></img>\r\n        <p className=\"act_header_name\">{authAthleteData?.firstname}</p>\r\n      </div>\r\n      <div className=\"act_body\">\r\n        <h1>{data.name}</h1>\r\n\r\n        <div className=\"act_body_map\">\r\n          <div id=\"mape\" className=\"map\"></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"act_footer\">kudos: {data.kudos_count}</div>\r\n\r\n      <div className=\"act_body_info\">\r\n        <div className=\"act_body_info_container\">\r\n          <div className=\"act_body_info_container_option_light\">Distance</div>\r\n          <div className=\"act_body_info_container_option\"> {Math.round(data.distance) / 1000}km</div>\r\n        </div>\r\n\r\n        <div className=\"act_body_info_container\">\r\n          <div className=\"act_body_info_container_option_light\">Average speed</div>\r\n          <div className=\"act_body_info_container_option\"> {Math.round((data.average_speed * 60 * 60) / 1000)}km/h</div>\r\n        </div>\r\n\r\n        <div className=\"act_body_info_container\">\r\n          <div className=\"act_body_info_container_option_light\">average heartrate</div>\r\n          <div className=\"act_body_info_container_option\"> {data.average_heartrate}bpm</div>\r\n        </div>\r\n\r\n        <div className=\"act_body_info_container\">\r\n          <div className=\"act_body_info_container_option_light\">average speed</div>\r\n          <div className=\"act_body_info_container_option\"> {Math.round((data.average_speed * 60 * 60) / 1000)}km/h</div>\r\n        </div>\r\n\r\n        <div className=\"act_body_info_container\">\r\n          <div className=\"act_body_info_container_option_light\">moving time</div>\r\n          <div className=\"act_body_info_container_option\"> {data.moving_time / 60}minutes</div>\r\n        </div>\r\n\r\n        <div className=\"act_body_info_container\">\r\n          <div className=\"act_body_info_container_option_light\">moving time</div>\r\n          <div className=\"act_body_info_container_option\"> {data.moving_time / 60}minutes</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"act_body_info\">\r\n        {data.type === \"Ride\" && (\r\n          <div className=\"act_body_info_container\">\r\n            <div className=\"act_body_info_container_option_light\">average watts</div>\r\n            <div className=\"act_body_info_container_option\"> {data.average_watts}w</div>\r\n          </div>\r\n        )}\r\n        {data.type === \"Ride\" && (\r\n          <div className=\"act_body_info_container\">\r\n            <div className=\"act_body_info_container_option_light\">weighted average watts</div>\r\n            <div className=\"act_body_info_container_option\"> {data.weighted_average_watts}w</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"act_body_info\">\r\n        <div className=\"act_body_info_container\">\r\n          <div className=\"act_body_info_container_option_light\">suffer score</div>\r\n          <div className=\"act_body_info_container_option\"> {data.suffer_score}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ActivityDetails;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../css/Activity.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport L, { LatLngExpression } from \"leaflet\";\r\n// import  \"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport polyUtil from \"polyline-encoded\";\r\n\r\nfunction Activity({ counter, data, accesToken }) {\r\n  const [athleteId, setAtheleteId] = useState(data.athlete.id);\r\n  const [authAthleteData, setAuthAthleteData] = useState();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    console.log(counter);\r\n\r\n    const data2 = { data: accesToken };\r\n    fetch(\"https://www.strava.com/api/v3/athlete\", {\r\n      method: \"GET\", // or 'PUT'\r\n      headers: {\r\n        authorization: \"Bearer \" + accesToken,\r\n        accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        // console.log(json);\r\n        setAuthAthleteData(json);\r\n      });\r\n\r\n    if (data.type === \"Ride\" || data.type === \"Run\") {\r\n      let newCoordinates = [[51.47832, 3.526]];\r\n      var mymap = L.map(`map${counter}`).setView(newCoordinates[0], 13);\r\n      L.tileLayer(\"https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}\", {\r\n        attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n        maxZoom: 18,\r\n        id: \"mapbox/streets-v11\",\r\n        tileSize: 512,\r\n        zoomOffset: -1,\r\n        accessToken: \"pk.eyJ1IjoicGlldGcxMjM0IiwiYSI6ImNrd2RocDFidzQ0eHUzMHJveGNmY2UyYnAifQ.r2rclJ70-a9SMFZRZQ8H8w\",\r\n      }).addTo(mymap);\r\n\r\n      //console.log(data.summary_polyline)\r\n      var coordinates = polyUtil.decode(data.map.summary_polyline);\r\n\r\n      for (let i = 0; i < coordinates.length; i++) {\r\n        newCoordinates[i] = { lat: coordinates[i][0], lng: coordinates[i][1] };\r\n      }\r\n      //console.log(newCoordinates)\r\n\r\n      L.polyline(newCoordinates, {\r\n        color: \"red\",\r\n        weight: 5,\r\n        opacity: 0.7,\r\n        lineJoin: \"round\",\r\n      }).addTo(mymap);\r\n    }\r\n  }, []);\r\n  return (\r\n    <div onClick={() => history.push(`/activity/${data.id}`)} className=\"act\">\r\n      <div className=\"act_header\">\r\n        <img className=\"act_header_img\" src={authAthleteData?.profile_medium}></img>\r\n        <p className=\"act_header_name\">{authAthleteData?.firstname}</p>\r\n      </div>\r\n      <div className=\"act_body\">\r\n        <h1>{data.name}</h1>\r\n        <div className=\"act_body_info\">\r\n          <div className=\"act_body_info_container\">\r\n            <div className=\"act_body_info_container_option_light\">Distance</div>\r\n            <div className=\"act_body_info_container_option\"> {Math.round(data.distance / 1000)}km</div>\r\n          </div>\r\n\r\n          <div className=\"act_body_info_container\">\r\n            <div className=\"act_body_info_container_option_light\">average speed</div>\r\n            <div className=\"act_body_info_container_option\"> {Math.round((data.average_speed * 60 * 60) / 1000)}km/h</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div onClick={(e) => e.stopPropagation()} className=\"act_body_map\">\r\n          <div id={`map${counter}`} className=\"map\"></div>\r\n\r\n          {/* <MapContainer center={[51.505, -0.09]} zoom={13} scrollWheelZoom={false}>\r\n  <TileLayer\r\n    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n  />\r\n  <Marker position={[51.505, -0.09]}>\r\n    <Popup>\r\n      A pretty CSS3 popup. <br /> Easily customizable.\r\n    </Popup>\r\n  </Marker>\r\n</MapContainer> */}\r\n        </div>\r\n      </div>\r\n      <div className=\"act_footer\">kudos: {data.kudos_count}</div>\r\n\r\n      {/* <p>average_heartrate: {data.average_heartrate}</p>\r\n            <p>moving_time: {data.moving_time}</p>\r\n            {(data.type===\"Ride\")&&<div>\r\n                <p>average_watts: {data.average_watts}</p>\r\n            <p>weighted_average_watts: {data.weighted_average_watts}</p>\r\n            </div>\r\n            }\r\n            <p>suffer_score: {data.suffer_score}</p> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Activity;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Activity from \"./Activity\";\r\nimport { useStateValue } from \"../Stateprovider\";\r\n\r\nfunction MyActivities() {\r\n  const [activities, setActivities] = useState([]);\r\n  const [{ accesToken }, dispatch] = useStateValue();\r\n  useEffect(() => {\r\n    console.log(accesToken);\r\n    const data2 = { data: accesToken };\r\n    //\r\n    console.log(\"Bearer \" + accesToken);\r\n    fetch(\"https://www.strava.com/api/v3/athlete/activities?page=1&per_page=30\", {\r\n      method: \"GET\", // or 'PUT'\r\n      headers: {\r\n        authorization: \"Bearer \" + accesToken,\r\n        accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        // console.log(json);\r\n        setActivities(json);\r\n      });\r\n    //\r\n    // fetch(\"/listactivities\", {\r\n    //   method: \"POST\", // or 'PUT'\r\n    //   headers: {\r\n    //     \"Content-Type\": \"application/json\",\r\n    //   },\r\n    //   body: JSON.stringify(data2),\r\n    // })\r\n    //   .then((response) => response.json())\r\n    //   .then((data) => {\r\n    //     console.log(\"Success, Data:\", data);\r\n    //     //console.log(data.data[0])\r\n\r\n    //     setActivities(data.data)\r\n    //     }).catch((error) => {\r\n    //     console.error(\"Error:\", error);\r\n    //   });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {activities && (\r\n        <div className=\"activities\">\r\n          {activities.map((doc, index) => (\r\n            <Activity counter={index} data={doc} key={index} accesToken={accesToken} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyActivities;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useStateValue } from \"../Stateprovider\";\r\nimport Chart from \"react-google-charts\";\r\nimport \"../css/MySufferScores.css\";\r\n\r\nfunction MySufferScores() {\r\n  const [{ accesToken }] = useStateValue();\r\n  const [intenPoints, setIntenPoints] = useState([]);\r\n  const [length, setLength] = useState();\r\n  const [showChart, setShowChart] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(accesToken);\r\n    const data2 = { data: accesToken };\r\n    fetch(\"https://www.strava.com/api/v3/athlete/activities?page=1&per_page=30\", {\r\n      method: \"GET\", // or 'PUT'\r\n      headers: {\r\n        authorization: \"Bearer \" + accesToken,\r\n        accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(\"Success, Data:\", json);\r\n        console.log(json);\r\n        let currentEndWeek = new Date();\r\n\r\n        let day = currentEndWeek.getDay();\r\n\r\n        if (day === 0) {\r\n          currentEndWeek = Date.now() / 1000 - 604800;\r\n        } else {\r\n          currentEndWeek = new Date(currentEndWeek.setDate(currentEndWeek.getDate() + (7 - day) - 6));\r\n          //console.log(currentEndWeek)\r\n          currentEndWeek = currentEndWeek.getTime() / 1000;\r\n        }\r\n\r\n        let currentWeekScore = 0;\r\n        let currentWeekIndex = 0;\r\n\r\n        for (let i = 0; i < json.length; i++) {\r\n          let date = new Date(json[i].start_date_local).getTime() / 1000;\r\n\r\n          if (date >= currentEndWeek) {\r\n            currentWeekScore += json[i].suffer_score;\r\n          }\r\n          if (date < currentEndWeek || i === json.length - 1) {\r\n            setIntenPoints((doc) => {\r\n              let oldData = doc;\r\n              let newData = [currentWeekIndex, currentWeekScore];\r\n              return [...oldData, newData];\r\n            });\r\n            currentWeekIndex += 1;\r\n            currentEndWeek = currentEndWeek - 604800;\r\n            currentWeekScore = json[i].suffer_score;\r\n          }\r\n        }\r\n        setLength(currentWeekIndex);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (intenPoints.length === length) {\r\n      console.log(intenPoints);\r\n      let newArr = [[\"time\", \"suffer score\"]];\r\n      let counter = 1;\r\n      for (let i = intenPoints.length - 1; i >= 0; i--) {\r\n        newArr[counter] = [counter - 1, intenPoints[i][1]];\r\n        counter += 1;\r\n      }\r\n      console.log(newArr);\r\n      setIntenPoints(newArr);\r\n      setShowChart(true);\r\n    }\r\n  }, [length, intenPoints]);\r\n  return (\r\n    <div className=\"suffer\">\r\n      {showChart && (\r\n        <Chart\r\n          width={\"600px\"}\r\n          height={\"500px\"}\r\n          chartType=\"LineChart\"\r\n          loader={<div>Loading Chart</div>}\r\n          data={intenPoints}\r\n          options={{\r\n            title: \"Suffer scores\",\r\n            hAxis: { title: \"time\", titleTextStyle: { color: \"#333\" } },\r\n            vAxis: { minValue: 0, maxValue: 200 },\r\n\r\n            // For the legend to fit, we make the chart area smaller\r\n            //chartArea: { width: '50%', height: '70%' },\r\n            // lineWidth: 25\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MySufferScores;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Home from \"./Home\";\r\nimport Permissions from \"./Permissions\"\r\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\r\nimport ActivityDetails from \"./ActivityDetails\";\r\nimport NavBar from \"./NavBar\"\r\nimport MyActivities from \"./MyActivities\"\r\nimport MySufferScores from \"./MySufferScores\"\r\n\r\nfunction App() {\r\n  \r\n\r\n  \r\n  return (\r\n   <Router>\r\n   <div className=\"app\">\r\n    \r\n     \r\n\r\n     <Switch>\r\n\r\n       <Route path=\"/exchange_token\" >\r\n           <NavBar active=\"home\"/>\r\n           <Permissions Notredirect/>\r\n         </Route>\r\n\r\n         <Route path=\"/activity/:id\" >\r\n           <Permissions/>\r\n           <NavBar active=\"act\"/>\r\n           <ActivityDetails/>\r\n           \r\n         </Route>\r\n\r\n         <Route path=\"/myactivities\" >\r\n           <Permissions/>\r\n           <NavBar active=\"act\"/>\r\n           <MyActivities/>\r\n\r\n         </Route>\r\n\r\n         <Route path=\"/mysufferscores\" >\r\n           <Permissions/>\r\n           <NavBar active=\"suf\"/>\r\n           <MySufferScores/>\r\n         </Route>\r\n\r\n\r\n\r\n       <Route path=\"/\" >\r\n           <Home/>\r\n         </Route>\r\n\r\n         \r\n         \r\n       \r\n     </Switch>\r\n\r\n      \r\n     \r\n\r\n      \r\n  \r\n    </div>\r\n   \r\n   </Router>\r\n    \r\n    \r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export const initialState={\r\n    accesToken:null,expires_at:null,refresh_token:null\r\n    \r\n    \r\n}\r\n\r\n\r\nconst reducer=(state,action)=>{\r\n    // console.log(action)\r\n    switch(action.type){\r\n        \r\n            case 'SET_ACCESTOKEN':\r\n             return{\r\n                ...state,accesToken:action.accesToken,expires_at:action.expires_at,refresh_token:action.refresh_token\r\n                 }\r\n                \r\n                 \r\n                    default:return state;     \r\n                \r\n    }\r\n}\r\nexport default reducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { StateProvider } from './Stateprovider';\r\nimport reducer,{initialState} from \"./reducer\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StateProvider initialState={initialState} reducer={reducer}>\r\n    <App />\r\n     </StateProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n//#### Video Demo:  https://youtu.be/uaFpnPi0gOY\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}